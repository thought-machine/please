version: 2
jobs:
   build-linux:
     working_directory: ~/please
     docker:
       - image: thoughtmachine/please_ubuntu:latest
     environment:
       PLZ_ARGS: "-p --profile ci -o buildconfig.ci:true"
     steps:
       - checkout
       - restore_cache:
           key: bootstrap-linux-main-{{ checksum "bootstrap.sh" }}
       - restore_cache:
           key: go-linux-main-{{ checksum "third_party/go/BUILD" }}
       - restore_cache:
           key: python-linux-main-{{ checksum "third_party/python/BUILD" }}
       - run:
           name: Bootstrap & Build
           command: ./bootstrap.sh --exclude no_circleci --test_results_file plz-out/results/please/test_results.xml
       - store_test_results:
           path: plz-out/results
       - run:
           name: Lint
           command: ./tools/misc/ci_lint.py && plz-out/bin/src/please run -p //third_party/go:buildifier -- --mode=check `git ls-files | grep BUILD`
       - run:
           name: Package
           command: ./plz-out/bin/src/please build //package:all //tools/misc:gen_release --exclude asc -p
       - persist_to_workspace:
           root: plz-out/pkg
           paths:
             - linux_amd64/please_*.tar.*
             - gen_release.pex
             - release_signer
       - store_artifacts:
           path: plz-out/log
       - save_cache:
           key: bootstrap-linux-main-{{ checksum "bootstrap.sh" }}
           paths: [ ".bootstrap" ]
       - save_cache:
           key: go-linux-main-{{ checksum "third_party/go/BUILD" }}
           paths: [ ".plz-cache/third_party/go" ]
       - save_cache:
           key: python-linux-main-{{ checksum "third_party/python/BUILD" }}
           paths: [ ".plz-cache/third_party/python" ]

   build-linux-alt:
     working_directory: ~/please
     docker:
       - image: thoughtmachine/please_ubuntu_alt:latest
     environment:
       PLZ_ARGS: "-p --profile ci"
       PLZ_COVER: "cover"
     steps:
       - checkout
       - restore_cache:
           key: bootstrap-linux-alt-{{ checksum "bootstrap.sh" }}
       - restore_cache:
           key: go-linux-alt-{{ checksum "third_party/go/BUILD" }}
       - restore_cache:
           key: python-linux-alt-{{ checksum "third_party/python/BUILD" }}
       - run:
           name: Bootstrap & Build
           command: ./bootstrap.sh --exclude no_circleci --test_results_file plz-out/results/please/test_results.xml
       - store_test_results:
           path: plz-out/results
       - store_artifacts:
           path: plz-out/log
       - save_cache:
           key: bootstrap-linux-alt-{{ checksum "bootstrap.sh" }}
           paths: [ ".bootstrap" ]
       - save_cache:
           key: go-linux-alt-{{ checksum "third_party/go/BUILD" }}
           paths: [ ".plz-cache/third_party/go" ]
       - save_cache:
           key: python-linux-alt-{{ checksum "third_party/python/BUILD" }}
           paths: [ ".plz-cache/third_party/python" ]

   build-darwin:
      macos:
        xcode: "9.0"
      environment:
        PLZ_ARGS: "-p --profile ci --exclude pip"
      steps:
       - checkout
       - restore_cache:
           key: bootstrap-darwin-go111-{{ checksum "bootstrap.sh" }}
       - restore_cache:
           key: go-darwin-go111-{{ checksum "third_party/go/BUILD" }}
       - restore_cache:
           key: python-darwin-py370-{{ checksum "third_party/python/BUILD" }}
       - restore_cache:
           key: homebrew-v1
       - run:
           name: Install deps
           command: brew install go unittest-cpp nasm pkg-config && brew upgrade python
       - run:
           name: Bootstrap & Build
           command: ./bootstrap.sh --exclude no_circleci --test_results_file plz-out/results/please/test_results.xml
       - store_test_results:
           path: plz-out/results
       - store_artifacts:
           path: plz-out/log
       - run:
           name: Package
           command: ./plz-out/bin/src/please build //package:all --exclude asc --exclude deb -p
       - persist_to_workspace:
           root: plz-out/pkg
           paths:
             - darwin_amd64/please_*.tar.*
       - store_artifacts:
           path: /tmp/artifacts
       - save_cache:
           key: homebrew-v1
           paths: [ "/usr/local/Homebrew" ]
       - save_cache:
           key: bootstrap-darwin-go111-{{ checksum "bootstrap.sh" }}
           paths: [ ".bootstrap" ]
       - save_cache:
           key: go-darwin-go111-{{ checksum "third_party/go/BUILD" }}
           paths: [ ".plz-cache/third_party/go" ]
       - save_cache:
           key: python-darwin-py370-{{ checksum "third_party/python/BUILD" }}
           paths: [ ".plz-cache/third_party/python" ]

   release:
     docker:
       - image: thoughtmachine/please_ubuntu:latest
     steps:
       - attach_workspace:
           at: /tmp/workspace
       - run: /tmp/workspace/gen_release.pex --github_token $GITHUB_TOKEN --signer /tmp/workspace/release_signer /tmp/workspace/linux_amd64/* /tmp/workspace/darwin_amd64/*

workflows:
  version: 2
  build-all:
    jobs:
      - build-linux
      - build-linux-alt
      - build-darwin:
          requires:
            - build-linux
            - build-linux-alt
      - release:
          requires:
            - build-linux
            - build-linux-alt
            - build-darwin
          filters:
            branches:
              only: master
