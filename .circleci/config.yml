version: 2.1
jobs:
   build-linux:
     working_directory: ~/please
     docker:
       - image: thoughtmachine/please_ubuntu:20200226
     resource_class: large
     environment:
       PLZ_ARGS: "-p -v notice --profile ci"
     steps:
       - checkout
       - restore_cache:
           key: go-mod-linux-v4-{{ checksum "go.mod" }}
       - restore_cache:
           key: go-linux-main-v3-{{ checksum "third_party/go/BUILD" }}
       - restore_cache:
           key: python-linux-main-{{ checksum "third_party/python/BUILD" }}
       - run:
           name: Bootstrap & Build
           command: ./bootstrap.sh --test_results_file plz-out/results/please/test_results.xml
       - store_test_results:
           path: plz-out/results
       - run:
           name: Package
           command: ./plz-out/bin/src/please build //package:all //tools/misc:gen_release //docs:tarball -p
       - persist_to_workspace:
           root: plz-out/pkg
           paths:
             - linux_amd64/please_*.tar.*
             - gen_release.pex
             - release_signer
             - docs.tar.gz
       - store_artifacts:
           path: plz-out/log
       - save_cache:
           key: go-mod-linux-v4-{{ checksum "go.mod" }}
           paths:
             - "~/go/pkg/mod"
       - save_cache:
           key: go-linux-main-v3-{{ checksum "third_party/go/BUILD" }}
           paths: [ ".plz-cache/third_party/go" ]
       - save_cache:
           key: python-linux-main-{{ checksum "third_party/python/BUILD" }}
           paths: [ ".plz-cache/third_party/python" ]

   build-linux-alt:
     working_directory: ~/please
     docker:
       - image: thoughtmachine/please_ubuntu_alt:20200226
     resource_class: large
     environment:
       PLZ_ARGS: "-p -v notice --profile ci"
       PLZ_COVER: "cover"
     steps:
       - checkout
       - restore_cache:
           key: go-mod-linux-alt-v3-{{ checksum "go.mod" }}
       - restore_cache:
           key: go-linux-alt-v2-{{ checksum "third_party/go/BUILD" }}
       - restore_cache:
           key: python-linux-alt-{{ checksum "third_party/python/BUILD" }}
       - run:
           name: Bootstrap & Build
           command: ./bootstrap.sh --test_results_file plz-out/results/please/test_results.xml
       - store_test_results:
           path: plz-out/results
       - store_artifacts:
           path: plz-out/log
       - save_cache:
           key: go-mod-linux-alt-v3-{{ checksum "go.mod" }}
           paths:
             - "~/go/pkg/mod"
       - save_cache:
           key: go-linux-alt-v2-{{ checksum "third_party/go/BUILD" }}
           paths: [ ".plz-cache/third_party/go" ]
       - save_cache:
           key: python-linux-alt-{{ checksum "third_party/python/BUILD" }}
           paths: [ ".plz-cache/third_party/python" ]

   lint:
     working_directory: ~/please
     docker:
       - image: thoughtmachine/please_ubuntu:20200226
     environment:
       PLZ_ARGS: "-p -v notice --profile ci"
     steps:
       - checkout
       - restore_cache:
           key: go-mod-linux-v4-{{ checksum "go.mod" }}
       - restore_cache:
           key: go-linux-main-v3-{{ checksum "third_party/go/BUILD" }}
       - run:
           name: Lint
           command: ./pleasew lint

   build-darwin:
      macos:
        xcode: "9.0"
      environment:
        PLZ_ARGS: "-p -v notice --profile ci --exclude pip --exclude embed"
      steps:
       - checkout
       - restore_cache:
           key: go-mod-darwin-v3-{{ checksum "bootstrap.sh" }}
       - restore_cache:
           key: go-darwin-go114-v1-{{ checksum "third_party/go/BUILD" }}
       - restore_cache:
           key: python-darwin-py370-{{ checksum "third_party/python/BUILD" }}
       - run:
           name: Install deps
           command: ./.circleci/setup_osx.sh
       - run:
           name: Bootstrap & Build
           command: ./bootstrap.sh --test_results_file plz-out/results/please/test_results.xml
       - store_test_results:
           path: plz-out/results
       - store_artifacts:
           path: plz-out/log
       - run:
           name: Package
           command: ./plz-out/bin/src/please build //package:all -p
       - persist_to_workspace:
           root: plz-out/pkg
           paths:
             - darwin_amd64/please_*.tar.*
       - store_artifacts:
           path: /tmp/artifacts
       - save_cache:
           key: go-mod-darwin-v3-{{ checksum "go.mod" }}
           paths:
             - "~/go/pkg/mod"
       - save_cache:
           key: go-darwin-go114-v1-{{ checksum "third_party/go/BUILD" }}
           paths: [ ".plz-cache/third_party/go" ]
       - save_cache:
           key: python-darwin-py370-{{ checksum "third_party/python/BUILD" }}
           paths: [ ".plz-cache/third_party/python" ]

   test-rex:
     working_directory: ~/please
     docker:
       - image: thoughtmachine/please_ubuntu:20200326
     resource_class: large
     steps:
       - checkout
       - attach_workspace:
           at: /tmp/workspace
       - restore_cache:
           key: elan-v1-{{ checksum "third_party/go/BUILD" }}
       - run:
           name: Test Remote Execution
           command: ./.circleci/rex_test.sh
       - store_test_results:
           path: plz-out/results
       - store_artifacts:
           path: plz-out/log
       - save_cache:
           key: elan-v1-{{ checksum "third_party/go/BUILD" }}
           paths: [ "plz-out/elan" ]

   release:
     docker:
       - image: thoughtmachine/please_docs:20190318
     steps:
       - attach_workspace:
           at: /tmp/workspace
       - add_ssh_keys:
           fingerprints:
             - "cc:57:b9:67:31:65:a6:70:8c:e3:e7:90:ca:e6:a6:41"
       - run: /tmp/workspace/gen_release.pex --signer /tmp/workspace/release_signer /tmp/workspace/linux_amd64/* /tmp/workspace/darwin_amd64/*

   docs:
     docker:
       - image: thoughtmachine/please_docs:20190318
     steps:
       - attach_workspace:
           at: /tmp/site
       - add_ssh_keys:
           fingerprints:
             - "cc:57:b9:67:31:65:a6:70:8c:e3:e7:90:ca:e6:a6:41"
       - run:
           name: Upload docs
           working_directory: /tmp/site
           command: tar -xzf docs.tar.gz && sftp -oStrictHostKeyChecking=no -b /root/sftp.txt 3472291@sftp.dc2.gpaas.net

workflows:
  version: 2
  build-all:
    jobs:
      - build-linux
      - build-linux-alt
      - lint:
          filters:
            branches:
              ignore: master
      - build-darwin:
          requires:
            - build-linux
            - build-linux-alt
      - test-rex:
          requires:
            - build-linux
      - release:
          requires:
            - build-linux
            - build-linux-alt
            - build-darwin
            - test-rex
          filters:
            branches:
              only: master
      - docs:
          requires:
            - build-linux
          filters:
            branches:
              only: master
