subinclude("//build_defs:version")

go_binary(
    name = "please",
    srcs = ["please.go"],
    definitions = {
        "github.com/thought-machine/please/src/core.PleaseVersion": VERSION,
    },
    visibility = ["PUBLIC"],
    deps = [
        "///third_party/go/github.com_thought-machine_go-flags//:go-flags",
        "///third_party/go/go.uber.org_automaxprocs//maxprocs",
        "//src/assets",
        "//src/build",
        "//src/cache",
        "//src/clean",
        "//src/cli",
        "//src/cli/logging",
        "//src/core",
        "//src/debug",
        "//src/exec",
        "//src/export",
        "//src/format",
        "//src/fs",
        "//src/gc",
        "//src/generate",
        "//src/hashes",
        "//src/help",
        "//src/output",
        "//src/plz",
        "//src/plzinit",
        "//src/process",
        "//src/query",
        "//src/run",
        "//src/sandbox",
        "//src/scm",
        "//src/test",
        "//src/tool",
        "//src/update",
        "//src/watch",
    ],
)

# This is handy for things like plz plz --repo_root
filegroup(
    name = "tools",
    srcs = ["//package:tools"],
    binary = True,
    visibility = ["//:install"],
)

# On Linux, we should produce statically linked binaries. Emit a test to verify this is the case.
if is_platform(os = "linux"):
    gentest(
        name = "static_test",
        data = [":please"],
        no_test_output = True,
        test_cmd = "ldd $DATA && exit 1 || exit 0",
    )
