// Defines the interface to remote build workers.
// Currently this is a relatively simple client/server relationship where a server is
// persisted in the background and each compilation process makes a request to it.
// We define it here as an RPC server but in practice we're making requests & responses
// over stdin/stdout for now.

syntax = "proto3";

package worker;
option java_package = "build.please.worker";
option java_outer_classname = "WorkerProto";

service Worker {
    // A request to build a single target.
    rpc Build(BuildRequest) returns (BuildResponse);
}

message BuildRequest {
    // The rule label
    string rule = 1;
    // The temporary directory to build the target in.
    string temp_dir = 2;
    // List of source files to compile
    repeated string srcs = 3;
    // Compiler options
    repeated string opts = 4;
}

message BuildResponse {
    // The rule label
    string rule = 1;
    // True if build succeeded
    bool success = 2;
    // Any messages reported. On failure these should indicate what's gone wrong.
    repeated string messages = 3;
}
